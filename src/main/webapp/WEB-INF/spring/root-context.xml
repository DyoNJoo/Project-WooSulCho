<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!--  dataSource 객체 생성하기 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.cj.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://127.0.0.1/mydb"></property>
		<property name="username" value="root"></property>
		<property name="password" value="tiger1234"></property>
	</bean>
	<!--  mybatis에서 사용할 xml파일의 위치와 환경설정이 있는 정보를 이용하여
			SqlSessionFactory 객체를 생성한다.
		 	dataSource 의존주입 해준다.-->
	<bean id="SqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<property name="mapperLocations" value="classpath:/mapper/*Mapper.xml"></property>
	</bean>
	
	<!-- interface가 있는 위치(dao) -->
	<!-- beans에 mybatis-spring 추가 -->
	<mybatis-spring:scan base-package="com.project.wsch.mapper"/>
	
	<!-- 트랜잭션처리를 하는 마이바티스 객체 생성 -->
   <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <property name="dataSource" ref="dataSource"></property>
   </bean>
   <!-- @Transactional 어노테이션 이용시 -->
   <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
</beans>
